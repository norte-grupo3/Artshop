
@{

    var id = Request.Url.Segments.Last();
    ViewBag.Title = "Editar Pintura";
}

<h2>Editar</h2>

<table class="table table-hover">
    <tr>
        <td>Título    </td>
        <td><input data-bind="value: Product.Title" />
        <td />
    </tr>
    <tr>
        <td>Descripción    </td>
        <td><input data-bind="value: Product.Description" />
        <td />
    </tr>
    <tr>
        <td>Imagen     </td>
        <td><input data-bind="value: Product.Image" />
        <td />
    </tr>
    <tr>
        <td>Precio      </td>

        <td><input data-bind="value: Product.Price" />
        <td />
    </tr>
    <tr>
        <td>Artista     </td>
        <td>
            <select data-bind="
                        options: Artists,
                        optionsText:'FirstName',
                        optionsValue: 'Id'
                        ">
            </select>

        </td>
    </tr>

</table>
*<input type="button" value="Guardar" data-bind="click: EditProduct" class="btn btn-primary" />

<div>
    @Html.ActionLink("Volver", "Index")
</div>



@section scripts
{
    <script src="~/Scripts/knockout-3.5.1.js"></script>
    <script src="~/Scripts/knockout.mapping-latest.js"></script>

    <script>

        var AppViewModel = function (data) {

            var self = this;
            self.Artists = ko.observableArray([]);

            Product = {
            Id: ko.observable(),
            Title : ko.observable(),
            Description : ko.observable(),
            Image : ko.observable(),
            Price : ko.observable(),
            art : ko.observable(),

            }
            
            var idPintura =@id;
            
            $.getJSON("/Product/GetProduct/"+idPintura, function (data) {

                ko.mapping.fromJS(data);
                Product.Id(data.Id)
                Product.Title(data.Title);
                Product.Description(data.Description);
                Product.Image(data.Image);
                Product.Price(data.Price);
               Product.art(data.art);
            });
            console.log(this.Product);

            function Artista(data) {
                this.Id = ko.observable(data.Id);
                this.FirstName = ko.observable(data.FirstName);
                this.LastName = ko.observable(data.LastName);
            }

            $.getJSON("/Artist/GetArtists",
                function (data) {

                    var Artistas = ko.utils.arrayMap(data, function (item) {
                        return new Artista(item);
                    });
                    self.Artists(Artistas);
                });


            self.EditProduct = function (data) {

                console.log(Product);
                $.ajax({
                    url: '@Url.Action("EditProduct", "Product")',
                    type: 'GET',
                    data: Product,
                    contentType: 'application/json',
                    success: function (result) {

                       window.location = "/Product";
                    }
                }).fail(
                    function (xhr, textStatus, err) {
                        alert(err);
                    });
            };

        }
        var viewModel = new AppViewModel();
        ko.applyBindings(viewModel);




    </script>

}