
@{
    ViewBag.Title = "Gestión de Pinturas";
}


<h2>Pinturas</h2>
<div>
    @Html.ActionLink("Nueva Pintura", "Create")
</div>
<table class="table table-hover">
    <tr>
        <th>Id</th>
        <th>Título</th>
        <th>Descripción</th>
        <th>Imagen</th>
        <th>Precio</th>
        <th>Artista</th>
        <th>Acciones</th>

    </tr>
    <tbody data-bind="foreach: Products">
        <tr>
            <td data-bind="text: Id"></td>
            <td data-bind="text: Title"></td>
            <td data-bind="text: Description"></td>
            <td data-bind="text: Image"></td>
            <td data-bind="text: Price"></td>
            <td data-bind="text: Artist.FirstName() + ' ' + Artist.LastName()"></td>
            <td>
                @*<input data-bind="" type="button" value="Editar" class="btn btn-primary" />*@
                <input data-bind="click: $parent.RemoveProduct" type="button" value="Eliminar" class="btn btn-primary" />

            </td>

        </tr>
    </tbody>
</table>


@section scripts
{
    <script src="~/Scripts/knockout-3.5.1.js"></script>
    <script src="~/Scripts/knockout.mapping-latest.js"></script>

    <script>
        var AppViewModel = function () {
            var self = this;


            self.Products = ko.mapping.fromJS([]);
         

            $.getJSON("/Product/GetProducts",
                function (data) {
                    ko.mapping.fromJS(data, {}, self.Products);
                });

        };


        AppViewModel.prototype.RemoveProduct = function (data) {

            if (confirm('Desea Eliminar la Pintura '+data.Title()+'?')) {
                $.ajax({
                    type: 'GET',
                    url: '/Product/RemoveProduct/' + data.Id(),
                    success: function (result) {
                        window.location = "/Product";
                    }

                }).fail(
                    function (xhr, textStatus, err) {
                        alert(err);
                    });

            } else {
               
            }

      
        };

 

        var viewModel = new AppViewModel();
        ko.applyBindings(viewModel);



    </script>

}

