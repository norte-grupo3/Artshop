
@{
    ViewBag.Title = "Gestion de Artistas";
}

<h2>Pinturas</h2>
<div>
    @Html.ActionLink("Nuevo Artista", "Create")
</div>
<div id="content">
    <div class="container-fluid">
        <table class="table-responsive">
            <thead>
                <tr>
                    <th style="display:none;">Id    </th>
                    <th>FirstName    </th>
                    <th>LastName     </th>
                    <th>LifeSpan     </th>
                    <th>Country      </th>
                    <th>Description  </th>
                    <th>TotalProducts</th>
                    <th></th>
                </tr>
            </thead>
            <tbody data-bind="foreach: Artists">
                <tr>
                    <td style="display:none;" data-bind='text: Id'></td>
                    <td data-bind='text: FirstName'></td>
                    <td data-bind='text: LastName'></td>
                    <td data-bind='text: LifeSpan'></td>
                    <td data-bind='text: Country'></td>
                    <td data-bind='text: Description'></td>
                    <td data-bind='text: TotalProducts'></td>
                    <td>
                        <a data-bind="attr: { 'href': '@Url.Action("Edit", "Artist")/' + Id() }" class="btn btn-primary">
                            Editar
                        </a>
                        <input data-bind="click: $parent.RemoveArtist" type="button" value="Eliminar" class="btn btn-primary" />
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

@section scripts
{
    <script src="~/Scripts/knockout-3.5.1.js"></script>
    <script src="~/Scripts/knockout.mapping-latest.js"></script>

    <script>
        var appViewModel = function () {
            var artist = {
                Id: ko.observable(),
                FirstName: ko.observable(),
                LastName: ko.observable(),
                LifeSpan: ko.observable(),
                Country: ko.observable(),
                Description: ko.observable(),
                TotalProducts: ko.observable()
            }
            this.RemoveArtist = this.RemoveArtist.bind(this);
            var self = this;
            self.Artists = ko.mapping.fromJS([]);
            $.getJSON("Artist/GetArtists", function (data) {
                ko.mapping.fromJS(data, artist, self.Artists);
            });
        };

        appViewModel.prototype.RemoveArtist = function (data) {
            var self = this;
            if (confirm('Desea Eliminar el artista ' + data.FirstName() + ' ' + data.LastName() + '?')) {
                $.ajax({
                    type: 'GET',
                    url: 'Artist/RemoveArtist/' + data.Id(),
                    success: function (result) {
                        console.log(self.Artists);
                        self.Artists.remove(data);
                    }
                }).fail(
                    function (xhr, textStatus, err) {
                        alert(err);
                    });
            } else {

            }
        };

        // Apply bindings
        ko.applyBindings(new appViewModel());
    </script>
}

